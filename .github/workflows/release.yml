name: release

on:
  push:
    branches:
      - main
      - next
  pull_request:
    branches:
      - main
      - next

jobs:
  install:
    name: üèóÔ∏è Install and verify
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !startsWith(github.event.head_commit.message, 'chore:') && !startsWith(github.event.head_commit.message, 'style:') && !contains(github.event.pull_request.title, '[skip ci]') && !startsWith(github.event.pull_request.title, 'chore:') && !startsWith(github.event.pull_request.title, 'style:') && !startsWith(github.event.head_commit.message, 'chore(') && !startsWith(github.event.head_commit.message, 'style(') && !startsWith(github.event.pull_request.title, 'chore(') && !startsWith(github.event.pull_request.title, 'style(')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.14.3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --reporter=silent
      - name: ‚úÖ Check types
        run: pnpm check-types
      - name: üßπ Lint
        run: pnpm lint -- --quiet

  run-tests:
    name: 'üß™ Test'
    runs-on: ubuntu-latest
    needs: install
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.14.3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Load node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Test
        env:
          JEST_SUITE_NAME: 'Test'
          JEST_JUNIT_OUTPUT_NAME: junit.xml
          JEST_JUNIT_OUTPUT_DIR: .test-results
          JEST_JUNIT_ADD_FILE_ATTRIBUTE: 'true'
        run: pnpm test -- --coverage --silent --reporters=jest-junit
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: .test-results/junit.xml
      - name: Upload test coverage
        uses: actions/upload-artifact@v2
        with:
          name: test-coverage
          path: coverage

  publish-tests:
    name: üì§ Publish test results
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download test results
        uses: actions/download-artifact@v2
        with:
          name: test-results
          path: .jest
      - name: Publish test results
        uses: dorny/test-reporter@v1
        with:
          name: üì• Test results
          token: ${{ secrets.GITHUB_TOKEN }}
          reporter: jest-junit
          path: .jest/junit.xml
          list-suites: 'all'
          list-tests: 'all'
          max-annotations: '50'
          fail-on-error: 'true'
      - name: Commit test results
        if: ${{ github.event_name == 'push' }}
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: .jest/junit.xml
          commit_message: 'chore: update test results'

  publish:
    name: üöÄ Publish
    # Don't run deployments for test-only commits/PRs
    if: "github.event_name == 'push' && !startsWith(github.event.head_commit.message, 'test:') && !startsWith(github.event.pull_request.title, 'test:') && !startsWith(github.event.head_commit.message, 'test(') && !startsWith(github.event.pull_request.title, 'test(')"
    runs-on: ubuntu-latest
    needs: run-tests
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.14.3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Load node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Stage changes
        run: git add .
      - name: Commit new version
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          git-message: 'chore(release): {version}'
      - name: Publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          dry-run: true
          check-version: true
          tag: ${{ github.ref == 'refs/heads/main' && 'latest' || 'next' }}
